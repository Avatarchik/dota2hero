@export sparkle.updatePosition

uniform sampler2D positionTexture;
uniform sampler2D spawnTexture;

uniform float positionTextureSize;
uniform float deltaTime;

varying vec2 v_Texcoord;

void main() {
    vec4 particle = texture2D(positionTexture, v_Texcoord);

    if (particle.w > 0.0) {
        particle.xyz += 0.01;
        particle.w -= deltaTime;
    }
    else {
        particle = texture2D(spawnTexture, v_Texcoord);
    }

    gl_FragColor = particle;
}

@end

@export curlnoise.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform sampler2D particleTexture;

attribute vec3 position : POSITION;
varying float life;

void main(){

    vec4 p = texture2D(particleTexture, position.xy);

    if(p.w > 0.0){
        gl_Position = worldViewProjection * vec4(p.xyz, 1.0);
    }
    else{
        gl_Position = worldViewProjection * vec4(1000.0, 1000.0, 1000.0, 1.0);
    }

    life = 1.0 - p.w / 6.0; 
    gl_PointSize = 20.0;

}

@end

@export curlnoise.fragment

varying float life;

uniform sampler2D spiritTexture;
uniform vec3 color : [0.0, 0.0, 0.0];

void main(){

    gl_FragColor = texture2D(spiritTexture, gl_PointCoord);
    gl_FragColor.xyz *= color;
    gl_FragColor.a *= (1.0 - life) * 0.8;
}

@end